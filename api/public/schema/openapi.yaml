openapi: 3.0.2
info:
  title: 'Challenge Component'
  version: V.0.1
  description: |
    API Details
    - Component: Challenge Component
    - Reference: chrc
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/proto-component) / [zip](https://github.com/ConductionNL/proto-component/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/chrc-php) 
    - Datamodel: [postman](/schema/chrc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /answers:
    get:
      tags:
        - Answer
      operationId: getAnswerCollection
      summary: 'Retrieves the collection of Answer resources.'
      responses:
        200:
          description: 'Answer collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Answer:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Answer:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Answer
      operationId: postAnswerCollection
      summary: 'Creates a Answer resource.'
      responses:
        201:
          description: 'Answer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer-read'
          links:
            GetAnswerItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAnswerItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /answers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Answer:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Answer:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Answer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Answer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Answer-write'
        description: 'The new Answer resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/answers/{id}':
    get:
      tags:
        - Answer
      operationId: getAnswerItem
      summary: 'Retrieves a Answer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Answer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Answer
      operationId: putAnswerItem
      summary: 'Replaces the Answer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Answer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Answer:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Answer:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Answer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Answer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Answer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Answer-write'
        description: 'The updated Answer resource'
    delete:
      tags:
        - Answer
      operationId: deleteAnswerItem
      summary: 'Removes the Answer resource.'
      responses:
        204:
          description: 'Answer resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/answers/{id}/audit_trail':
    get:
      tags:
        - Answer
      operationId: get_audit_trailAnswerItem
      summary: 'Retrieves a Answer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Answer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/answers/{id}/change_log':
    get:
      tags:
        - Answer
      operationId: get_change_logsAnswerItem
      summary: 'Retrieves a Answer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Answer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Answer:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Answer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /deals:
    get:
      tags:
        - Deal
      operationId: getDealCollection
      summary: 'Retrieves the collection of Deal resources.'
      responses:
        200:
          description: 'Deal collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Deal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Deal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deal-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Deal
      operationId: postDealCollection
      summary: 'Creates a Deal resource.'
      responses:
        201:
          description: 'Deal resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Deal-read'
          links:
            GetDealItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDealItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /deals/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Deal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Deal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Deal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Deal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Deal-write'
        description: 'The new Deal resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/deals/{id}':
    get:
      tags:
        - Deal
      operationId: getDealItem
      summary: 'Retrieves a Deal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Deal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Deal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Deal
      operationId: putDealItem
      summary: 'Replaces the Deal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Deal resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Deal-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Deal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Deal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Deal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Deal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Deal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Deal-write'
        description: 'The updated Deal resource'
    delete:
      tags:
        - Deal
      operationId: deleteDealItem
      summary: 'Removes the Deal resource.'
      responses:
        204:
          description: 'Deal resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/deals/{id}/audit_trail':
    get:
      tags:
        - Deal
      operationId: get_audit_trailDealItem
      summary: 'Retrieves a Deal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Deal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Deal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/deals/{id}/change_log':
    get:
      tags:
        - Deal
      operationId: get_change_logsDealItem
      summary: 'Retrieves a Deal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Deal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Deal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Deal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Deal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /entries:
    get:
      tags:
        - Entry
      operationId: getEntryCollection
      summary: 'Retrieves the collection of Entry resources.'
      responses:
        200:
          description: 'Entry collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Entry:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Entry:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Entry
      operationId: postEntryCollection
      summary: 'Creates a Entry resource.'
      responses:
        201:
          description: 'Entry resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Entry:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Entry:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Entry-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Entry-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Entry-read'
          links:
            GetEntryItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEntryItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /entries/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Entry:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Entry:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Entry-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Entry-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Entry-write'
        description: 'The new Entry resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/entries/{id}':
    get:
      tags:
        - Entry
      operationId: getEntryItem
      summary: 'Retrieves a Entry resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Entry resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Entry:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Entry:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Entry-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Entry-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Entry-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Entry
      operationId: putEntryItem
      summary: 'Replaces the Entry resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Entry resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Entry:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Entry:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Entry-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Entry-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Entry-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Entry-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Entry:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Entry:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Entry-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Entry-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Entry-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Entry-write'
        description: 'The updated Entry resource'
    delete:
      tags:
        - Entry
      operationId: deleteEntryItem
      summary: 'Removes the Entry resource.'
      responses:
        204:
          description: 'Entry resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/entries/{id}/audit_trail':
    get:
      tags:
        - Question
      operationId: get_audit_trailQuestionItem
      summary: 'Retrieves a Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Question resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/entries/{id}/change_log':
    get:
      tags:
        - Question
      operationId: get_change_logsQuestionItem
      summary: 'Retrieves a Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Question resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /groups:
    get:
      tags:
        - Group
      operationId: getGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Group
      operationId: postGroupCollection
      summary: 'Creates a Group resource.'
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The new Group resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/groups/{id}':
    get:
      tags:
        - Group
      operationId: getGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Group
      operationId: putGroupItem
      summary: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
    delete:
      tags:
        - Group
      operationId: deleteGroupItem
      summary: 'Removes the Group resource.'
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/groups/{id}/audit_trail':
    get:
      tags:
        - Group
      operationId: get_audit_trailGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/groups/{id}/change_log':
    get:
      tags:
        - Group
      operationId: get_change_logsGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /pitch_stages:
    get:
      tags:
        - PitchStage
      operationId: getPitchStageCollection
      summary: 'Retrieves the collection of PitchStage resources.'
      responses:
        200:
          description: 'PitchStage collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PitchStage:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PitchStage:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchStage-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - PitchStage
      operationId: postPitchStageCollection
      summary: 'Creates a PitchStage resource.'
      responses:
        201:
          description: 'PitchStage resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
          links:
            GetPitchStageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPitchStageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /pitch_stages/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PitchStage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PitchStage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
        description: 'The new PitchStage resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/pitch_stages/{id}':
    get:
      tags:
        - PitchStage
      operationId: getPitchStageItem
      summary: 'Retrieves a PitchStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'PitchStage resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - PitchStage
      operationId: putPitchStageItem
      summary: 'Replaces the PitchStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'PitchStage resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PitchStage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PitchStage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PitchStage-write'
        description: 'The updated PitchStage resource'
    delete:
      tags:
        - PitchStage
      operationId: deletePitchStageItem
      summary: 'Removes the PitchStage resource.'
      responses:
        204:
          description: 'PitchStage resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/pitch_stages/{id}/audit_trail':
    get:
      tags:
        - PitchStage
      operationId: get_audit_trailPitchStageItem
      summary: 'Retrieves a PitchStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'PitchStage resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/pitch_stages/{id}/change_log':
    get:
      tags:
        - PitchStage
      operationId: get_change_logsPitchStageItem
      summary: 'Retrieves a PitchStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'PitchStage resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PitchStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PitchStage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /pitches:
    get:
      tags:
        - Pitch
      operationId: getPitchCollection
      summary: 'Retrieves the collection of Pitch resources.'
      responses:
        200:
          description: 'Pitch collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Pitch:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Pitch:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pitch-read'
      parameters:
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: submitter
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateSubmitted[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateSubmitted[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateSubmitted[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateSubmitted[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requiredBudget[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requiredBudget[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requiredBudget[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requiredBudget[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requiredBudget[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Pitch
      operationId: postPitchCollection
      summary: 'Creates a Pitch resource.'
      responses:
        201:
          description: 'Pitch resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Pitch-read'
          links:
            GetPitchItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPitchItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /pitches/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Pitch:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Pitch:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Pitch-write'
        description: 'The new Pitch resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/pitches/{id}':
    get:
      tags:
        - Pitch
      operationId: getPitchItem
      summary: 'Retrieves a Pitch resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Pitch resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Pitch-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Pitch
      operationId: putPitchItem
      summary: 'Replaces the Pitch resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Pitch resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Pitch-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Pitch:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Pitch:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Pitch-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Pitch-write'
        description: 'The updated Pitch resource'
    delete:
      tags:
        - Pitch
      operationId: deletePitchItem
      summary: 'Removes the Pitch resource.'
      responses:
        204:
          description: 'Pitch resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/pitches/{id}/audit_trail':
    get:
      tags:
        - Pitch
      operationId: get_audit_trailPitchItem
      summary: 'Retrieves a Pitch resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Pitch resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Pitch-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/pitches/{id}/change_log':
    get:
      tags:
        - Pitch
      operationId: get_change_logsPitchItem
      summary: 'Retrieves a Pitch resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Pitch resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Pitch:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Pitch-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Pitch-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /proposals:
    get:
      tags:
        - Proposal
      operationId: getProposalCollection
      summary: 'Retrieves the collection of Proposal resources.'
      responses:
        200:
          description: 'Proposal collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Proposal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Proposal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Proposal
      operationId: postProposalCollection
      summary: 'Creates a Proposal resource.'
      responses:
        201:
          description: 'Proposal resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proposal-read'
          links:
            GetProposalItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProposalItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /proposals/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Proposal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Proposal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Proposal-write'
        description: 'The new Proposal resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/proposals/{id}':
    get:
      tags:
        - Proposal
      operationId: getProposalItem
      summary: 'Retrieves a Proposal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Proposal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proposal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Proposal
      operationId: putProposalItem
      summary: 'Replaces the Proposal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Proposal resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proposal-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Proposal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Proposal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Proposal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Proposal-write'
        description: 'The updated Proposal resource'
    delete:
      tags:
        - Proposal
      operationId: deleteProposalItem
      summary: 'Removes the Proposal resource.'
      responses:
        204:
          description: 'Proposal resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/proposals/{id}/audit_trail':
    get:
      tags:
        - Proposal
      operationId: get_audit_trailProposalItem
      summary: 'Retrieves a Proposal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Proposal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proposal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/proposals/{id}/change_log':
    get:
      tags:
        - Proposal
      operationId: get_change_logsProposalItem
      summary: 'Retrieves a Proposal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Proposal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proposal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proposal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proposal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /questions:
    get:
      tags:
        - Question
      operationId: getQuestionCollection
      summary: 'Retrieves the collection of Question resources.'
      responses:
        200:
          description: 'Question collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Question:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Question:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Question
      operationId: postQuestionCollection
      summary: 'Creates a Question resource.'
      responses:
        201:
          description: 'Question resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
          links:
            GetQuestionItem:
              parameters:
                id: '$response.body#/id'
              operationId: getQuestionItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /questions/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Question-write'
        description: 'The new Question resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/questions/{id}':
    get:
      tags:
        - Question
      operationId: getQuestionItem
      summary: 'Retrieves a Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Question resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Question
      operationId: putQuestionItem
      summary: 'Replaces the Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Question resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Question-write'
        description: 'The updated Question resource'
    delete:
      tags:
        - Question
      operationId: deleteQuestionItem
      summary: 'Removes the Question resource.'
      responses:
        204:
          description: 'Question resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /tender_stages:
    get:
      tags:
        - TenderStage
      operationId: getTenderStageCollection
      summary: 'Retrieves the collection of TenderStage resources.'
      responses:
        200:
          description: 'TenderStage collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TenderStage:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TenderStage:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderStage-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - TenderStage
      operationId: postTenderStageCollection
      summary: 'Creates a TenderStage resource.'
      responses:
        201:
          description: 'TenderStage resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
          links:
            GetTenderStageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTenderStageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /tender_stages/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TenderStage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TenderStage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
        description: 'The new TenderStage resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/tender_stages/{id}':
    get:
      tags:
        - TenderStage
      operationId: getTenderStageItem
      summary: 'Retrieves a TenderStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'TenderStage resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - TenderStage
      operationId: putTenderStageItem
      summary: 'Replaces the TenderStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'TenderStage resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TenderStage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TenderStage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TenderStage-write'
        description: 'The updated TenderStage resource'
    delete:
      tags:
        - TenderStage
      operationId: deleteTenderStageItem
      summary: 'Removes the TenderStage resource.'
      responses:
        204:
          description: 'TenderStage resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/tender_stages/{id}/audit_trail':
    get:
      tags:
        - TenderStage
      operationId: get_audit_trailTenderStageItem
      summary: 'Retrieves a TenderStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'TenderStage resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/tender_stages/{id}/change_log':
    get:
      tags:
        - TenderStage
      operationId: get_change_logsTenderStageItem
      summary: 'Retrieves a TenderStage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'TenderStage resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TenderStage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TenderStage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /tenders:
    get:
      tags:
        - Tender
      operationId: getTenderCollection
      summary: 'Retrieves the collection of Tender resources.'
      responses:
        200:
          description: 'Tender collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tender:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tender:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tender-read'
      parameters:
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: submitters
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateClose[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateClose[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateClose[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateClose[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'created[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'modified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'budget[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'budget[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'budget[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'budget[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'budget[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Tender
      operationId: postTenderCollection
      summary: 'Creates a Tender resource.'
      responses:
        201:
          description: 'Tender resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tender-read'
          links:
            GetTenderItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTenderItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /tenders/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tender:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Tender:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tender-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tender-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tender-write'
        description: 'The new Tender resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/tenders/{id}':
    get:
      tags:
        - Tender
      operationId: getTenderItem
      summary: 'Retrieves a Tender resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tender resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tender-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Tender
      operationId: putTenderItem
      summary: 'Replaces the Tender resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Tender resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tender-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tender:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Tender:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tender-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tender-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tender-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tender-write'
        description: 'The updated Tender resource'
    delete:
      tags:
        - Tender
      operationId: deleteTenderItem
      summary: 'Removes the Tender resource.'
      responses:
        204:
          description: 'Tender resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/tenders/{id}/audit_trail':
    get:
      tags:
        - Tender
      operationId: get_audit_trailTenderItem
      summary: 'Retrieves a Tender resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tender resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tender-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/tenders/{id}/change_log':
    get:
      tags:
        - Tender
      operationId: get_change_logsTenderItem
      summary: 'Retrieves a Tender resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tender resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Tender:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tender-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tender-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
components:
  schemas:
    Answer-read:
      type: object
      description: 'An answer is used to answer a question.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this answer.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this answer.'
          type: string
        description:
          description: 'The description of this answer.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this answer.'
          type: array
          items:
            type: string
        answer:
          description: 'The answer.'
          type: string
        created:
          description: 'The moment this deal was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this deal was last updated'
          type: string
          format: date-time
          nullable: true
    Answer-write:
      type: object
      description: 'An answer is used to answer a question.'
      properties:
        name:
          description: 'The name of this answer.'
          type: string
        description:
          description: 'The description of this answer.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this answer.'
          type: array
          items:
            type: string
        answer:
          description: 'The answer.'
          type: string
    'Answer:jsonld-read':
      type: object
      description: 'An answer is used to answer a question.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this answer.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this answer.'
          type: string
        description:
          description: 'The description of this answer.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this answer.'
          type: array
          items:
            type: string
        answer:
          description: 'The answer.'
          type: string
        created:
          description: 'The moment this deal was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this deal was last updated'
          type: string
          format: date-time
          nullable: true
    'Answer:jsonld-write':
      type: object
      description: 'An answer is used to answer a question.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this answer.'
          type: string
        description:
          description: 'The description of this answer.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this answer.'
          type: array
          items:
            type: string
        answer:
          description: 'The answer.'
          type: string
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Deal-read:
      type: object
      description: 'A deal is used when the submitter of the tender has an agreement with a person/organization.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this deal.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this deal.'
          type: string
        description:
          description: 'The description of this deal.'
          type: string
          nullable: true
        contractors:
          description: 'The contractor(s) of this tender.'
          type: array
          items:
            type: string
        documents:
          description: 'Documents stating this deal.'
          type: array
          items:
            type: string
          nullable: true
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender-read'
        proposal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Proposal-read'
        created:
          description: 'The moment this deal was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this deal was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Deal-write:
      type: object
      description: 'A deal is used when the submitter of the tender has an agreement with a person/organization.'
      required:
        - name
      properties:
        name:
          description: 'The name of this deal.'
          type: string
        description:
          description: 'The description of this deal.'
          type: string
          nullable: true
        contractors:
          description: 'The contractor(s) of this tender.'
          type: array
          items:
            type: string
        documents:
          description: 'Documents stating this deal.'
          type: array
          items:
            type: string
          nullable: true
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender-write'
        proposal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Proposal-write'
    'Deal:jsonld-read':
      type: object
      description: 'A deal is used when the submitter of the tender has an agreement with a person/organization.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this deal.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this deal.'
          type: string
        description:
          description: 'The description of this deal.'
          type: string
          nullable: true
        contractors:
          description: 'The contractor(s) of this tender.'
          type: array
          items:
            type: string
        documents:
          description: 'Documents stating this deal.'
          type: array
          items:
            type: string
          nullable: true
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender:jsonld-read'
        proposal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Proposal:jsonld-read'
        created:
          description: 'The moment this deal was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this deal was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Deal:jsonld-write':
      type: object
      description: 'A deal is used when the submitter of the tender has an agreement with a person/organization.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this deal.'
          type: string
        description:
          description: 'The description of this deal.'
          type: string
          nullable: true
        contractors:
          description: 'The contractor(s) of this tender.'
          type: array
          items:
            type: string
        documents:
          description: 'Documents stating this deal.'
          type: array
          items:
            type: string
          nullable: true
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender:jsonld-write'
        proposal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Proposal:jsonld-write'
    Entry-read:
      type: object
      description: 'A entry is used when an person or group wants to join the tender.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this entry.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this entry.'
          type: string
        description:
          description: 'The description of this entry.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        dateOfEntry:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender-read'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question-read'
        created:
          description: 'The moment this entry was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this entry was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Entry-write:
      type: object
      description: 'A entry is used when an person or group wants to join the tender.'
      required:
        - name
      properties:
        name:
          description: 'The name of this entry.'
          type: string
        description:
          description: 'The description of this entry.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        dateOfEntry:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender-write'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question-write'
    'Entry:jsonld-read':
      type: object
      description: 'A entry is used when an person or group wants to join the tender.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this entry.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this entry.'
          type: string
        description:
          description: 'The description of this entry.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        dateOfEntry:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender:jsonld-read'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question:jsonld-read'
        created:
          description: 'The moment this entry was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this entry was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Entry:jsonld-write':
      type: object
      description: 'A entry is used when an person or group wants to join the tender.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this entry.'
          type: string
        description:
          description: 'The description of this entry.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        dateOfEntry:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender:jsonld-write'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question:jsonld-write'
    Group-read:
      type: object
      description: 'A group is used for sorting tenders.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this group.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this group.'
          type: string
        description:
          description: 'The description of this group.'
          type: string
          nullable: true
        tenders:
          type: array
          items:
            $ref: '#/components/schemas/Tender-read'
        created:
          description: 'The moment this group was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this group was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Group-write:
      type: object
      description: 'A group is used for sorting tenders.'
      required:
        - name
      properties:
        name:
          description: 'The name of this group.'
          type: string
        description:
          description: 'The description of this group.'
          type: string
          nullable: true
        tenders:
          type: array
          items:
            $ref: '#/components/schemas/Tender-write'
    'Group:jsonld-read':
      type: object
      description: 'A group is used for sorting tenders.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this group.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this group.'
          type: string
        description:
          description: 'The description of this group.'
          type: string
          nullable: true
        tenders:
          type: array
          items:
            $ref: '#/components/schemas/Tender:jsonld-read'
        created:
          description: 'The moment this group was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this group was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Group:jsonld-write':
      type: object
      description: 'A group is used for sorting tenders.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this group.'
          type: string
        description:
          description: 'The description of this group.'
          type: string
          nullable: true
        tenders:
          type: array
          items:
            $ref: '#/components/schemas/Tender:jsonld-write'
    Pitch-read:
      type: object
      description: 'A pitch is used by providers to present their solution/product/service for the tender.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this pitch.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this pitch.'
          type: string
        description:
          description: 'The description of this pitch.'
          type: string
          nullable: true
        submitter:
          description: 'The submitter of this pitch.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiredBudget:
          description: 'The required budget for this pitch.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        dateSubmitted:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender-read'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/PitchStage-read'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/PitchStage-read'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal-read'
        created:
          description: 'The moment this pitch was created'
          type: string
          format: date-time
        modified:
          description: 'The moment this pitch was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - submitter
    Pitch-write:
      type: object
      description: 'A pitch is used by providers to present their solution/product/service for the tender.'
      required:
        - name
        - submitter
      properties:
        name:
          description: 'The name of this pitch.'
          type: string
        description:
          description: 'The description of this pitch.'
          type: string
          nullable: true
        submitter:
          description: 'The submitter of this pitch.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiredBudget:
          description: 'The required budget for this pitch.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        dateSubmitted:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender-write'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/PitchStage-write'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/PitchStage-write'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal-write'
    'Pitch:jsonld-read':
      type: object
      description: 'A pitch is used by providers to present their solution/product/service for the tender.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this pitch.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this pitch.'
          type: string
        description:
          description: 'The description of this pitch.'
          type: string
          nullable: true
        submitter:
          description: 'The submitter of this pitch.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiredBudget:
          description: 'The required budget for this pitch.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        dateSubmitted:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender:jsonld-read'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/PitchStage:jsonld-read'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/PitchStage:jsonld-read'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal:jsonld-read'
        created:
          description: 'The moment this pitch was created'
          type: string
          format: date-time
        modified:
          description: 'The moment this pitch was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - submitter
    'Pitch:jsonld-write':
      type: object
      description: 'A pitch is used by providers to present their solution/product/service for the tender.'
      required:
        - name
        - submitter
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this pitch.'
          type: string
        description:
          description: 'The description of this pitch.'
          type: string
          nullable: true
        submitter:
          description: 'The submitter of this pitch.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiredBudget:
          description: 'The required budget for this pitch.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        dateSubmitted:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender:jsonld-write'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/PitchStage:jsonld-write'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/PitchStage:jsonld-write'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal:jsonld-write'
    PitchStage-read:
      type: object
      description: 'A pitch stage is part of an pitch process.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this pitch stage.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this pitch stage.'
          type: string
        description:
          description: 'The description of this pitch stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirement(s) of this pitch stage.'
          type: array
          items:
            type: string
          nullable: true
        created:
          description: 'The moment this pitch stage was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this pitch stage was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    PitchStage-write:
      type: object
      description: 'A pitch stage is part of an pitch process.'
      required:
        - name
      properties:
        name:
          description: 'The name of this pitch stage.'
          type: string
        description:
          description: 'The description of this pitch stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirement(s) of this pitch stage.'
          type: array
          items:
            type: string
          nullable: true
    'PitchStage:jsonld-read':
      type: object
      description: 'A pitch stage is part of an pitch process.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this pitch stage.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this pitch stage.'
          type: string
        description:
          description: 'The description of this pitch stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirement(s) of this pitch stage.'
          type: array
          items:
            type: string
          nullable: true
        created:
          description: 'The moment this pitch stage was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this pitch stage was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'PitchStage:jsonld-write':
      type: object
      description: 'A pitch stage is part of an pitch process.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this pitch stage.'
          type: string
        description:
          description: 'The description of this pitch stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirement(s) of this pitch stage.'
          type: array
          items:
            type: string
          nullable: true
    Proposal-read:
      type: object
      description: 'A proposal is an offer that is made by a provider to make a deal with the tender submitter(s).'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this proposal.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this proposal.'
          type: string
        description:
          description: 'The description of this proposal.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) that this proposal has.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this proposal.'
          type: string
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender-read'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal-read'
        pitch:
          $ref: '#/components/schemas/Pitch-read'
        created:
          description: 'The moment this proposal was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this proposal was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Proposal-write:
      type: object
      description: 'A proposal is an offer that is made by a provider to make a deal with the tender submitter(s).'
      required:
        - name
      properties:
        name:
          description: 'The name of this proposal.'
          type: string
        description:
          description: 'The description of this proposal.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) that this proposal has.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this proposal.'
          type: string
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender-write'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal-write'
        pitch:
          $ref: '#/components/schemas/Pitch-write'
    'Proposal:jsonld-read':
      type: object
      description: 'A proposal is an offer that is made by a provider to make a deal with the tender submitter(s).'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this proposal.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this proposal.'
          type: string
        description:
          description: 'The description of this proposal.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) that this proposal has.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this proposal.'
          type: string
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender:jsonld-read'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal:jsonld-read'
        pitch:
          $ref: '#/components/schemas/Pitch:jsonld-read'
        created:
          description: 'The moment this proposal was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this proposal was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Proposal:jsonld-write':
      type: object
      description: 'A proposal is an offer that is made by a provider to make a deal with the tender submitter(s).'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this proposal.'
          type: string
        description:
          description: 'The description of this proposal.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) that this proposal has.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this proposal.'
          type: string
          nullable: true
        tender:
          $ref: '#/components/schemas/Tender:jsonld-write'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal:jsonld-write'
        pitch:
          $ref: '#/components/schemas/Pitch:jsonld-write'
    Question-read:
      type: object
      description: 'A question is used when people or an organization have questions about the tender.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this entry.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this question.'
          type: string
        description:
          description: 'The description of this question.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        question:
          description: 'The question.'
          type: string
        documents:
          description: 'The document(s) added to this question.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this question.'
          type: string
          nullable: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer-read'
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender-read'
        entry:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entry-read'
        created:
          description: 'The moment this question was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this question was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - submitters
        - question
    Question-write:
      type: object
      description: 'A question is used when people or an organization have questions about the tender.'
      required:
        - name
        - submitters
        - question
      properties:
        name:
          description: 'The name of this question.'
          type: string
        description:
          description: 'The description of this question.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        question:
          description: 'The question.'
          type: string
        documents:
          description: 'The document(s) added to this question.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this question.'
          type: string
          nullable: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer-write'
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender-write'
        entry:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entry-write'
    'Question:jsonld-read':
      type: object
      description: 'A question is used when people or an organization have questions about the tender.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this entry.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this question.'
          type: string
        description:
          description: 'The description of this question.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        question:
          description: 'The question.'
          type: string
        documents:
          description: 'The document(s) added to this question.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this question.'
          type: string
          nullable: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer:jsonld-read'
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender:jsonld-read'
        entry:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entry:jsonld-read'
        created:
          description: 'The moment this question was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this question was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - submitters
        - question
    'Question:jsonld-write':
      type: object
      description: 'A question is used when people or an organization have questions about the tender.'
      required:
        - name
        - submitters
        - question
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this question.'
          type: string
        description:
          description: 'The description of this question.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        question:
          description: 'The question.'
          type: string
        documents:
          description: 'The document(s) added to this question.'
          type: array
          items:
            type: string
          nullable: true
        status:
          description: 'The status of this question.'
          type: string
          nullable: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer:jsonld-write'
        tender:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Tender:jsonld-write'
        entry:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entry:jsonld-write'
    Tender-read:
      type: object
      description: 'A tender can be used by clients to find a provider that can meet up to a certain solution/service/product with a given budget.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this tender.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this tender.'
          type: string
        description:
          description: 'The description of this tender.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        tenderGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        budget:
          description: 'The budget of this tender.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        kind:
          type: string
          nullable: true
        selectionCritera:
          type: string
          nullable: true
        catchPhrase:
          type: string
          nullable: true
        dateClose:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/TenderStage-read'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/TenderStage-read'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question-read'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Entry-read'
        pitches:
          type: array
          items:
            $ref: '#/components/schemas/Pitch-read'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal-read'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal-read'
        created:
          description: 'The moment this tender was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this tender was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - submitters
    Tender-write:
      type: object
      description: 'A tender can be used by clients to find a provider that can meet up to a certain solution/service/product with a given budget.'
      required:
        - name
        - submitters
      properties:
        name:
          description: 'The name of this tender.'
          type: string
        description:
          description: 'The description of this tender.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        tenderGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
        budget:
          description: 'The budget of this tender.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        kind:
          type: string
          nullable: true
        selectionCritera:
          type: string
          nullable: true
        catchPhrase:
          type: string
          nullable: true
        dateClose:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/TenderStage-write'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/TenderStage-write'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question-write'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Entry-write'
        pitches:
          type: array
          items:
            $ref: '#/components/schemas/Pitch-write'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal-write'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal-write'
    'Tender:jsonld-read':
      type: object
      description: 'A tender can be used by clients to find a provider that can meet up to a certain solution/service/product with a given budget.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this tender.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this tender.'
          type: string
        description:
          description: 'The description of this tender.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        tenderGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-read'
        budget:
          description: 'The budget of this tender.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        kind:
          type: string
          nullable: true
        selectionCritera:
          type: string
          nullable: true
        catchPhrase:
          type: string
          nullable: true
        dateClose:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/TenderStage:jsonld-read'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/TenderStage:jsonld-read'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question:jsonld-read'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Entry:jsonld-read'
        pitches:
          type: array
          items:
            $ref: '#/components/schemas/Pitch:jsonld-read'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal:jsonld-read'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal:jsonld-read'
        created:
          description: 'The moment this tender was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this tender was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - submitters
    'Tender:jsonld-write':
      type: object
      description: 'A tender can be used by clients to find a provider that can meet up to a certain solution/service/product with a given budget.'
      required:
        - name
        - submitters
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this tender.'
          type: string
        description:
          description: 'The description of this tender.'
          type: string
          nullable: true
        submitters:
          description: 'The submitter(s) of this tender.'
          type: array
          items:
            type: string
        tenderGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-write'
        budget:
          description: 'The budget of this tender.'
          type: string
          nullable: true
        documents:
          description: 'The document(s) of this tender.'
          type: array
          items:
            type: string
          nullable: true
        kind:
          type: string
          nullable: true
        selectionCritera:
          type: string
          nullable: true
        catchPhrase:
          type: string
          nullable: true
        dateClose:
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/TenderStage:jsonld-write'
        currentStage:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/TenderStage:jsonld-write'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question:jsonld-write'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Entry:jsonld-write'
        pitches:
          type: array
          items:
            $ref: '#/components/schemas/Pitch:jsonld-write'
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal:jsonld-write'
        deal:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Deal:jsonld-write'
    TenderStage-read:
      type: object
      description: 'A tender stage is part of a tender process.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this tender stage.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this tender stage.'
          type: string
        description:
          description: 'The description of this tender stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirements to complete this tender stage.'
          type: array
          items:
            type: string
        created:
          description: 'The moment this tender stage was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this tender stage was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    TenderStage-write:
      type: object
      description: 'A tender stage is part of a tender process.'
      required:
        - name
      properties:
        name:
          description: 'The name of this tender stage.'
          type: string
        description:
          description: 'The description of this tender stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirements to complete this tender stage.'
          type: array
          items:
            type: string
    'TenderStage:jsonld-read':
      type: object
      description: 'A tender stage is part of a tender process.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this tender stage.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this tender stage.'
          type: string
        description:
          description: 'The description of this tender stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirements to complete this tender stage.'
          type: array
          items:
            type: string
        created:
          description: 'The moment this tender stage was created'
          type: string
          format: date-time
          nullable: true
        modified:
          description: 'The moment this tender stage was last updated'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'TenderStage:jsonld-write':
      type: object
      description: 'A tender stage is part of a tender process.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this tender stage.'
          type: string
        description:
          description: 'The description of this tender stage.'
          type: string
          nullable: true
        requirements:
          description: 'The requirements to complete this tender stage.'
          type: array
          items:
            type: string
definitions:
  Answer-read:
    properties:
      id:
        description: 'The UUID identifier of this answer.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this answer.'
        type: string
        example: 'An answer for a question.'
        maxLength: 255
      description:
        description: 'The description of this answer.'
        type: string
        example: 'This answer is an answer to a question made by Swimming Pool Enterprise for a tender.'
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this answer.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      answer:
        description: 'The answer.'
        type: string
        example: 'Yes you can bring apples to the party.'
      created:
        description: 'The moment this deal was created'
        type: \Datetime
      modified:
        description: 'The moment this deal was last updated'
        type: \Datetime
    required: []
  Answer-write:
    properties:
      name:
        description: 'The name of this answer.'
        type: string
        example: 'An answer for a question.'
        maxLength: 255
      description:
        description: 'The description of this answer.'
        type: string
        example: 'This answer is an answer to a question made by Swimming Pool Enterprise for a tender.'
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this answer.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      answer:
        description: 'The answer.'
        type: string
        example: 'Yes you can bring apples to the party.'
    required: []
  Deal-read:
    properties:
      id:
        description: 'The UUID identifier of this deal.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this deal.'
        type: string
        example: 'Deal between SwimmingPool Enterprise and ABC Corp'
        maxLength: 255
      description:
        description: 'The description of this deal.'
        type: string
        example: 'This deal is an agreement between SwimmingPool Enterprise and ABC Corp.'
        maxLength: 255
      contractors:
        description: 'The contractor(s) of this tender.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      documents:
        description: 'Documents stating this deal.'
        type: string
      created:
        description: 'The moment this deal was created'
        type: \Datetime
      modified:
        description: 'The moment this deal was last updated'
        type: \Datetime
      tender: []
      proposal: []
    required:
      - name
  Deal-write:
    properties:
      name:
        description: 'The name of this deal.'
        type: string
        example: 'Deal between SwimmingPool Enterprise and ABC Corp'
        maxLength: 255
      description:
        description: 'The description of this deal.'
        type: string
        example: 'This deal is an agreement between SwimmingPool Enterprise and ABC Corp.'
        maxLength: 255
      contractors:
        description: 'The contractor(s) of this tender.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      documents:
        description: 'Documents stating this deal.'
        type: string
      tender: []
      proposal: []
    required:
      - name
  Entry-read:
    properties:
      id:
        description: 'The UUID identifier of this entry.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this entry.'
        type: string
        example: 'Entry of SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this entry.'
        type: string
        example: 'This entry signs SwimmingPool Enterprise in for a tender'
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this tender.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      dateOfEntry:
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      created:
        description: 'The moment this entry was created'
        type: \Datetime
      modified:
        description: 'The moment this entry was last updated'
        type: \Datetime
      tender: []
      questions: []
    required:
      - name
  Entry-write:
    properties:
      name:
        description: 'The name of this entry.'
        type: string
        example: 'Entry of SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this entry.'
        type: string
        example: 'This entry signs SwimmingPool Enterprise in for a tender'
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this tender.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      dateOfEntry:
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      tender: []
      questions: []
    required:
      - name
  Group-read:
    properties:
      id:
        description: 'The UUID identifier of this group.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this group.'
        type: string
        example: 'Product tenders'
        maxLength: 255
      description:
        description: 'The description of this group.'
        type: string
        example: 'This group holds all tenders that seek for a product to be provided.'
        maxLength: 255
      created:
        description: 'The moment this group was created'
        type: \Datetime
      modified:
        description: 'The moment this group was last updated'
        type: \Datetime
      tenders: []
    required:
      - name
  Group-write:
    properties:
      name:
        description: 'The name of this group.'
        type: string
        example: 'Product tenders'
        maxLength: 255
      description:
        description: 'The description of this group.'
        type: string
        example: 'This group holds all tenders that seek for a product to be provided.'
        maxLength: 255
      tenders: []
    required:
      - name
  Pitch-read:
    properties:
      id:
        description: 'The UUID identifier of this pitch.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this pitch.'
        type: string
        example: 'Glorious swimming pools by SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this pitch.'
        type: string
        example: 'Pitch made by SwimmingPool Enterprise'
        maxLength: 255
      submitter:
        description: 'The submitter of this pitch.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
        format: url
      requiredBudget:
        description: 'The required budget for this pitch.'
        type: string
        example: '150000.00'
      documents:
        description: 'The document(s) of this tender.'
        type: array
      dateSubmitted:
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      created:
        description: 'The moment this pitch was created'
        type: \Datetime
      modified:
        description: 'The moment this pitch was last updated'
        type: \Datetime
      tender: []
      stages: []
      currentStage: []
      proposals: []
    required:
      - name
      - submitter
  Pitch-write:
    properties:
      name:
        description: 'The name of this pitch.'
        type: string
        example: 'Glorious swimming pools by SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this pitch.'
        type: string
        example: 'Pitch made by SwimmingPool Enterprise'
        maxLength: 255
      submitter:
        description: 'The submitter of this pitch.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
        format: url
      requiredBudget:
        description: 'The required budget for this pitch.'
        type: string
        example: '150000.00'
      documents:
        description: 'The document(s) of this tender.'
        type: array
      dateSubmitted:
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      tender: []
      stages: []
      currentStage: []
      proposals: []
    required:
      - name
      - submitter
  PitchStage-read:
    properties:
      id:
        description: 'The UUID identifier of this pitch stage.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this pitch stage.'
        type: string
        example: 'First presentation.'
        maxLength: 255
      description:
        description: 'The description of this pitch stage.'
        type: string
        example: 'This pitch stage is about the first presentation of the pitch'
        maxLength: 255
      requirements:
        description: 'The requirement(s) of this pitch stage.'
        type: string
        example: 'The pitch needs to get through the first round of pitches.'
      created:
        description: 'The moment this pitch stage was created'
        type: \Datetime
      modified:
        description: 'The moment this pitch stage was last updated'
        type: \Datetime
    required:
      - name
  PitchStage-write:
    properties:
      name:
        description: 'The name of this pitch stage.'
        type: string
        example: 'First presentation.'
        maxLength: 255
      description:
        description: 'The description of this pitch stage.'
        type: string
        example: 'This pitch stage is about the first presentation of the pitch'
        maxLength: 255
      requirements:
        description: 'The requirement(s) of this pitch stage.'
        type: string
        example: 'The pitch needs to get through the first round of pitches.'
    required:
      - name
  Proposal-read:
    properties:
      id:
        description: 'The UUID identifier of this proposal.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this proposal.'
        type: string
        example: 'Proposal from SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this proposal.'
        type: string
        maxLength: 255
      documents:
        description: 'The document(s) that this proposal has.'
        type: string
      status:
        description: 'The status of this proposal.'
        type: string
        example: 'In consideration'
        maxLength: 255
      created:
        description: 'The moment this proposal was created'
        type: \Datetime
      modified:
        description: 'The moment this proposal was last updated'
        type: \Datetime
      tender: []
      deal: []
      pitch: []
    required:
      - name
  Proposal-write:
    properties:
      name:
        description: 'The name of this proposal.'
        type: string
        example: 'Proposal from SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this proposal.'
        type: string
        maxLength: 255
      documents:
        description: 'The document(s) that this proposal has.'
        type: string
      status:
        description: 'The status of this proposal.'
        type: string
        example: 'In consideration'
        maxLength: 255
      tender: []
      deal: []
      pitch: []
    required:
      - name
  Question-read:
    properties:
      id:
        description: 'The UUID identifier of this entry.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this question.'
        type: string
        example: 'Question asked by SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this question.'
        type: string
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this tender.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      question:
        description: 'The question.'
        type: string
        example: 'Is it possible that that deadline will be extended?'
        maxLength: 255
      documents:
        description: 'The document(s) added to this question.'
        type: string
      status:
        description: 'The status of this question.'
        type: string
        example: Answered
      created:
        description: 'The moment this question was created'
        type: \Datetime
      modified:
        description: 'The moment this question was last updated'
        type: \Datetime
      answers: []
      tender: []
      entry: []
    required:
      - name
      - submitters
      - question
  Question-write:
    properties:
      name:
        description: 'The name of this question.'
        type: string
        example: 'Question asked by SwimmingPool Enterprise'
        maxLength: 255
      description:
        description: 'The description of this question.'
        type: string
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this tender.'
        type: string
        example: 'https://cc.zuid-drecht.nl/organizations/'
      question:
        description: 'The question.'
        type: string
        example: 'Is it possible that that deadline will be extended?'
        maxLength: 255
      documents:
        description: 'The document(s) added to this question.'
        type: string
      status:
        description: 'The status of this question.'
        type: string
        example: Answered
      answers: []
      tender: []
      entry: []
    required:
      - name
      - submitters
      - question
  Tender-read:
    properties:
      id:
        description: 'The UUID identifier of this tender.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this tender.'
        type: string
        example: 'Swimming pool design and construction'
        maxLength: 255
      description:
        description: 'The description of this tender.'
        type: string
        example: 'This tender requires a provider that can design and deliver a swimming pool with 2 water slides.'
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this tender.'
        type: array
        example: 'https://cc.zuid-drecht.nl/organizations/'
      budget:
        description: 'The budget of this tender.'
        type: string
        example: '100000.00'
      documents:
        description: 'The document(s) of this tender.'
        type: array
      kind:
        maxLength: 255
      selectionCritera:
        maxLength: 255
      catchPhrase:
        maxLength: 255
      dateClose:
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      created:
        description: 'The moment this tender was created'
        type: \Datetime
      modified:
        description: 'The moment this tender was last updated'
        type: \Datetime
      tenderGroups: []
      stages: []
      currentStage: []
      questions: []
      entries: []
      pitches: []
      proposals: []
      deal: []
    required:
      - name
      - submitters
  Tender-write:
    properties:
      name:
        description: 'The name of this tender.'
        type: string
        example: 'Swimming pool design and construction'
        maxLength: 255
      description:
        description: 'The description of this tender.'
        type: string
        example: 'This tender requires a provider that can design and deliver a swimming pool with 2 water slides.'
        maxLength: 255
      submitters:
        description: 'The submitter(s) of this tender.'
        type: array
        example: 'https://cc.zuid-drecht.nl/organizations/'
      budget:
        description: 'The budget of this tender.'
        type: string
        example: '100000.00'
      documents:
        description: 'The document(s) of this tender.'
        type: array
      kind:
        maxLength: 255
      selectionCritera:
        maxLength: 255
      catchPhrase:
        maxLength: 255
      dateClose:
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      tenderGroups: []
      stages: []
      currentStage: []
      questions: []
      entries: []
      pitches: []
      proposals: []
      deal: []
    required:
      - name
      - submitters
  TenderStage-read:
    properties:
      id:
        description: 'The UUID identifier of this tender stage.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this tender stage.'
        type: string
        example: Enrollment
        maxLength: 255
      description:
        description: 'The description of this tender stage.'
        type: string
        example: 'During this stage providers can sign up for this tender.'
        maxLength: 255
      requirements:
        description: 'The requirements to complete this tender stage.'
        type: string
        example: 'A minimum of 5 providers need to be signed up.'
      created:
        description: 'The moment this tender stage was created'
        type: \Datetime
      modified:
        description: 'The moment this tender stage was last updated'
        type: \Datetime
    required:
      - name
  TenderStage-write:
    properties:
      name:
        description: 'The name of this tender stage.'
        type: string
        example: Enrollment
        maxLength: 255
      description:
        description: 'The description of this tender stage.'
        type: string
        example: 'During this stage providers can sign up for this tender.'
        maxLength: 255
      requirements:
        description: 'The requirements to complete this tender stage.'
        type: string
        example: 'A minimum of 5 providers need to be signed up.'
    required:
      - name
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-07-21 17:11:36'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Answer
    description: |
      An answer is used to answer a question.
      
      
  -
    name: Deal
    description: |
      A deal is used when the submitter of the tender has an agreement with a person/organization.
      
      
  -
    name: Entry
    description: |
      A entry is used when an person or group wants to join the tender.
      
      
  -
    name: Group
    description: |
      A group is used for sorting tenders.
      
      
  -
    name: Pitch
    description: |
      A pitch is used by providers to present their solution/product/service for the tender.
      
      
  -
    name: PitchStage
    description: |
      A pitch stage is part of an pitch process.
      
      
  -
    name: Proposal
    description: |
      A proposal is an offer that is made by a provider to make a deal with the tender submitter(s).
      
      
  -
    name: Question
    description: |
      A question is used when people or an organization have questions about the tender.
      
      
  -
    name: Tender
    description: |
      A tender can be used by clients to find a provider that can meet up to a certain solution/service/product with a given budget.
      
      
  -
    name: TenderStage
    description: |
      A tender stage is part of a tender process.
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: conduction.nl
    url: chrc.dev.conduction.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
